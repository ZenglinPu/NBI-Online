{"ast":null,"code":"import HistoryItem from '@/components/history/HistoryItem.vue';\nimport HistoryLoadPage from '@/components/history/HistoryLoadPage.vue';\nexport default {\n  name: 'HistoryTable',\n  components: {\n    HistoryItem,\n    HistoryLoadPage\n  },\n\n  data() {\n    return {\n      totalPage: 0,\n      totalImage: 0,\n      currentPage: 1,\n      pageSize: 5,\n      historyList: [],\n      reset: true,\n      filter: {\n        isFilter: false,\n        filterType: '',\n        filterValue: ''\n      }\n    };\n  },\n\n  computed: {\n    itemVisible() {\n      return this.reset;\n    }\n\n  },\n\n  mounted() {\n    this.downloadHistory(this.currentPage, this.pageSize);\n    this.$bus.$on('historyCPChange', data => {\n      this.currentPage = data;\n      this.reset = false;\n\n      if (this.filter.isFilter) {\n        this.downloadHistoryWithFilter(data, this.pageSize, this.filter.filterType, this.filter.filterValue);\n      } else {\n        this.downloadHistory(this.currentPage, this.pageSize);\n      }\n    });\n    this.$bus.$on('historySizeChange', data => {\n      this.pageSize = data;\n\n      if (this.filter.isFilter) {\n        this.downloadHistoryWithFilter(1, this.pageSize, this.filter.filterType, this.filter.filterValue);\n      } else {\n        this.downloadHistory(1, this.pageSize);\n      }\n    });\n    this.$bus.$on('updateHistoryPage', () => {\n      if (this.filter.isFilter) {\n        this.downloadHistoryWithFilter(1, this.pageSize, this.filter.filterType, this.filter.filterValue);\n      } else {\n        this.downloadHistory(this.currentPage, this.pageSize);\n      }\n    });\n    this.$bus.$on('updateHistoryPageWithFilter', data => {\n      this.downloadHistoryWithFilter(1, this.pageSize, data.filterType, data.filterValue);\n      this.filter.isFilter = true;\n      this.filter.filterType = data.filterType;\n      this.filter.filterValue = data.filterValue;\n    });\n    this.$bus.$on('noFilter', () => {\n      this.filter.isFilter = false;\n    });\n  },\n\n  beforeDestroy() {\n    this.$bus.$off('historyCPChange');\n    this.$bus.$off('historySizeChange');\n    this.$bus.$off('updateHistoryPage');\n    this.$bus.$off('updateHistoryPageWithFilter');\n    this.$bus.$off('noFilter');\n  },\n\n  methods: {\n    // cookie\n    getCookie(objName) {\n      //获取指定名称的cookie的值\n      const arrStr = document.cookie.split(\"; \");\n\n      for (let i = 0; i < arrStr.length; i++) {\n        const temp = arrStr[i].split(\"=\");\n        if (temp[0] === objName) return temp[1];\n      }\n\n      return null;\n    },\n\n    getToken() {\n      return this.getCookie(\"NBI_token\");\n    },\n\n    getUID() {\n      return this.getCookie(\"NBI_UID\");\n    },\n\n    //根据条件搜索数据并显示\n    downloadHistoryWithFilter(currentPage, pageCount, filterType, filterValue) {\n      let getHistoryFilterForm = new FormData(); // 身份识别数据\n\n      getHistoryFilterForm.append(\"uid\", this.getUID());\n      getHistoryFilterForm.append(\"token\", this.getToken()); //当前页面\n\n      getHistoryFilterForm.append(\"currentPage\", currentPage); //显示条数\n\n      getHistoryFilterForm.append(\"pageCount\", pageCount); //过滤类型\n\n      getHistoryFilterForm.append(\"filterType\", filterType); //值\n\n      if (filterType === 3) {\n        getHistoryFilterForm.append(\"filterValue\", [filterValue[0].getTime(), filterValue[1].getTime()]);\n      } else {\n        getHistoryFilterForm.append(\"filterValue\", filterValue);\n      } // console.log(getHistoryFilterForm.get('filterType'), getHistoryFilterForm.get('filterValue'));\n\n\n      this.$axios.post(\"/NBI/History/getHistoryWithFilter/\", getHistoryFilterForm, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        if (response.data === 1) {\n          this.$message({\n            showClose: true,\n            message: '登录状态错误！请重新登录。',\n            type: 'error'\n          });\n          this.$bus.$emit(\"changeStatus\", {\n            status: false,\n            uname: ''\n          });\n        } else {\n          // console.log(response.data);\n          this.loadHistory(response.data.info, response.data.totalPage, response.data.totalImage);\n        }\n      });\n    },\n\n    //下载当前页面历史数据\n    downloadHistory(currentPage, pageCount) {\n      let getHistoryForm = new FormData(); // 身份识别数据\n\n      getHistoryForm.append(\"uid\", this.getUID());\n      getHistoryForm.append(\"token\", this.getToken()); //当前页面\n\n      getHistoryForm.append(\"currentPage\", currentPage); //显示条数\n\n      getHistoryForm.append(\"pageCount\", pageCount);\n      this.$axios.post(\"/NBI/History/display/\", getHistoryForm, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(response => {\n        if (response.data === 1) {\n          this.$message({\n            showClose: true,\n            message: '登录状态错误！请重新登录。',\n            type: 'error'\n          });\n          this.$bus.$emit(\"changeStatus\", {\n            status: false,\n            uname: ''\n          });\n        } else {\n          this.loadHistory(response.data.info, response.data.totalPage, response.data.totalImage);\n        }\n      });\n    },\n\n    //载入下载的历史数据\n    loadHistory(data, totalPage, totalImage) {\n      // console.log(totalPage);\n      // for (var key in data) {\n      //   var item = data[key];\n      //   console.log(item);\n      // }\n      this.totalPage = totalPage;\n      this.totalImage = totalImage;\n      this.historyList.splice(0);\n\n      for (var key in data) {\n        var item = data[key]; // console.log(item.Image_Compress);\n\n        this.historyList.push({\n          Image_Compress: item.Image_Compress,\n          expireTime: item.expireTime,\n          index: item.index,\n          lastChangeTime: item.lastChangeTime,\n          part: item.part,\n          preDiagnosis: item.preDiagnosis,\n          sampleName: item.sampleName,\n          _id: item._id\n        });\n      } // // console.log(this.historyList);\n\n\n      this.sendTotalPage();\n      this.sendTotalImage();\n      this.reset = true; //重建组件\n      // console.log(this.itemVisible+'后');\n    },\n\n    sendTotalPage() {\n      this.$bus.$emit('historyTotalPage', this.totalPage);\n    },\n\n    sendTotalImage() {\n      this.$bus.$emit('historyTotalImage', this.totalImage);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2BA;AACA;AAEA;EACAA,oBADA;EAEAC;IACAC,WADA;IAEAC;EAFA,CAFA;;EAMAC;IACA;MACAC,YADA;MAEAC,aAFA;MAGAC,cAHA;MAIAC,WAJA;MAKAC,eALA;MAMAC,WANA;MAOAC;QACAC,eADA;QAEAC,cAFA;QAGAC;MAHA;IAPA;EAaA,CApBA;;EAqBAC;IACAC;MACA;IACA;;EAHA,CArBA;;EA0BAC;IACA;IACA;MACA;MACA;;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IAEA,CAVA;IAWA;MACA;;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IACA,CARA;IASA;MACA;QACA;MACA,CAFA,MAGA;QACA;MACA;IAEA,CARA;IASA;MACA;MACA;MACA;MACA;IACA,CALA;IAMA;MACA;IACA,CAFA;EAGA,CAlEA;;EAmEAC;IACA;IACA;IACA;IACA;IACA;EACA,CAzEA;;EA0EAC;IACA;IACAC;MAAA;MACA;;MACA;QACA;QACA;MACA;;MACA;IACA,CATA;;IAUAC;MACA;IACA,CAZA;;IAaAC;MACA;IACA,CAfA;;IAgBA;IACAC;MACA,0CADA,CAEA;;MACAC;MACAA,sDAJA,CAKA;;MACAA,wDANA,CAOA;;MACAA,oDARA,CASA;;MACAA,sDAVA,CAWA;;MACA;QACAA;MACA,CAFA,MAGA;QACAA;MACA,CAjBA,CAkBA;;;MACA;QACAC;UAAA;QAAA;MADA,GAEAC,IAFA,CAEAC;QACA;UACA;YACAC,eADA;YAEAC,wBAFA;YAGAC;UAHA;UAKA;YAAAC;YAAAC;UAAA;QACA,CAPA,MAQA;UACA;UACA;QACA;MACA,CAfA;IAgBA,CApDA;;IAqDA;IACAC;MACA,oCADA,CAEA;;MACAC;MACAA,gDAJA,CAKA;;MACAA,kDANA,CAOA;;MACAA;MACA;QACAT;UAAA;QAAA;MADA,GAEAC,IAFA,CAEAC;QACA;UACA;YACAC,eADA;YAEAC,wBAFA;YAGAC;UAHA;UAKA;YAAAC;YAAAC;UAAA;QACA,CAPA,MAQA;UACA;QACA;MACA,CAdA;IAeA,CA9EA;;IA+EA;IACAG;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA;QACA,qBADA,CAEA;;QACA;UACAC,mCADA;UAEAC,2BAFA;UAGAC,iBAHA;UAIAC,mCAJA;UAKAC,eALA;UAMAC,+BANA;UAOAC,2BAPA;UAQAC;QARA;MAUA,CAtBA,CAuBA;;;MAEA;MACA;MAEA,kBA5BA,CA4BA;MACA;IACA,CA9GA;;IA+GAC;MACA;IACA,CAjHA;;IAkHAC;MACA;IACA;;EApHA;AA1EA","names":["name","components","HistoryItem","HistoryLoadPage","data","totalPage","totalImage","currentPage","pageSize","historyList","reset","filter","isFilter","filterType","filterValue","computed","itemVisible","mounted","beforeDestroy","methods","getCookie","getToken","getUID","downloadHistoryWithFilter","getHistoryFilterForm","headers","then","response","showClose","message","type","status","uname","downloadHistory","getHistoryForm","loadHistory","Image_Compress","expireTime","index","lastChangeTime","part","preDiagnosis","sampleName","_id","sendTotalPage","sendTotalImage"],"sourceRoot":"src/components/history","sources":["HistoryTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"table-container\">\r\n    <div class=\"table-header\">\r\n      <div style=\"width: 1%\" class=\"table-header-index-td\"><span class=\"table-header-index\"></span></div>\r\n      <div style=\"width: 11%\"><span class=\"table-header-inner\">图片</span></div>\r\n      <div style=\"width: 15%\"><span class=\"table-header-inner\">样本名称</span></div>\r\n      <div style=\"width: 10%\"><span class=\"table-header-inner\">部位</span></div>\r\n      <div style=\"width: 15%\"><span class=\"table-header-inner\">术前诊断</span></div>\r\n      <div style=\"width: 15%\"><span class=\"table-header-inner\">上传时间</span></div>\r\n      <div style=\"width: 10%\"><span class=\"table-header-inner\">过期时间</span></div>\r\n      <div style=\"width: 15%\"><span class=\"table-header-inner\">附加信息</span></div>\r\n    </div>\r\n    <ul v-if=\"itemVisible\">\r\n      <li v-for=\"(item,hisIndex) in this.historyList\" :key=\"hisIndex\">\r\n        <HistoryItem :index=\"item.index\" :Image_Compress=\"item.Image_Compress\" :sampleName=\"item.sampleName\" \r\n         :part=\"item.part\" :preDiagnosis=\"item.preDiagnosis\" :lastChangeTime=\"item.lastChangeTime\" \r\n         :expireTime=\"item.expireTime\" :_id=\"item._id\">\r\n        </HistoryItem>\r\n      </li>\r\n    </ul>\r\n    <div v-if=\"!itemVisible\" class=\"load-container\">\r\n      <HistoryLoadPage/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HistoryItem from '@/components/history/HistoryItem.vue'\r\nimport HistoryLoadPage from '@/components/history/HistoryLoadPage.vue'\r\n\r\nexport default {\r\n  name: 'HistoryTable',\r\n  components: {\r\n    HistoryItem,\r\n    HistoryLoadPage\r\n  },\r\n  data(){\r\n    return{\r\n      totalPage: 0,\r\n      totalImage: 0,\r\n      currentPage: 1,\r\n      pageSize:5,\r\n      historyList: [],\r\n      reset: true,\r\n      filter:{\r\n        isFilter: false,\r\n        filterType: '',\r\n        filterValue: '',\r\n      },\r\n    }\r\n  },\r\n  computed: {\r\n    itemVisible() {\r\n      return this.reset;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.downloadHistory(this.currentPage,this.pageSize);\r\n    this.$bus.$on('historyCPChange',(data)=>{\r\n      this.currentPage = data;\r\n      this.reset = false;\r\n      if (this.filter.isFilter){\r\n        this.downloadHistoryWithFilter(data, this.pageSize, this.filter.filterType, this.filter.filterValue);\r\n      }\r\n      else{\r\n        this.downloadHistory(this.currentPage,this.pageSize);\r\n      }\r\n\r\n    });\r\n    this.$bus.$on('historySizeChange',(data)=>{\r\n      this.pageSize = data;\r\n      if (this.filter.isFilter){\r\n        this.downloadHistoryWithFilter(1, this.pageSize, this.filter.filterType, this.filter.filterValue);\r\n      }\r\n      else{\r\n        this.downloadHistory(1,this.pageSize);\r\n      }\r\n    });\r\n    this.$bus.$on('updateHistoryPage', ()=>{\r\n      if (this.filter.isFilter){\r\n        this.downloadHistoryWithFilter(1, this.pageSize, this.filter.filterType, this.filter.filterValue);\r\n      }\r\n      else{\r\n        this.downloadHistory(this.currentPage,this.pageSize);\r\n      }\r\n\r\n    });\r\n    this.$bus.$on('updateHistoryPageWithFilter', (data)=>{\r\n      this.downloadHistoryWithFilter(1, this.pageSize, data.filterType, data.filterValue);\r\n      this.filter.isFilter = true;\r\n      this.filter.filterType = data.filterType;\r\n      this.filter.filterValue = data.filterValue;\r\n    });\r\n    this.$bus.$on('noFilter',()=>{\r\n      this.filter.isFilter = false;\r\n    });\r\n  },\r\n  beforeDestroy() {\r\n    this.$bus.$off('historyCPChange');\r\n    this.$bus.$off('historySizeChange');\r\n    this.$bus.$off('updateHistoryPage');\r\n    this.$bus.$off('updateHistoryPageWithFilter');\r\n    this.$bus.$off('noFilter');\r\n  },\r\n  methods: {\r\n    // cookie\r\n    getCookie(objName){//获取指定名称的cookie的值\r\n      const arrStr = document.cookie.split(\"; \");\r\n      for(let i = 0; i < arrStr.length; i ++){\r\n        const temp = arrStr[i].split(\"=\");\r\n        if(temp[0] === objName) return temp[1];\r\n      }\r\n      return null;\r\n    },\r\n    getToken(){\r\n      return this.getCookie(\"NBI_token\");\r\n    },\r\n    getUID(){\r\n      return this.getCookie(\"NBI_UID\");\r\n    },\r\n    //根据条件搜索数据并显示\r\n    downloadHistoryWithFilter(currentPage, pageCount, filterType, filterValue){\r\n      let getHistoryFilterForm = new FormData();\r\n      // 身份识别数据\r\n      getHistoryFilterForm.append(\"uid\", this.getUID());\r\n      getHistoryFilterForm.append(\"token\", this.getToken());\r\n      //当前页面\r\n      getHistoryFilterForm.append(\"currentPage\", currentPage);\r\n      //显示条数\r\n      getHistoryFilterForm.append(\"pageCount\", pageCount);\r\n      //过滤类型\r\n      getHistoryFilterForm.append(\"filterType\", filterType);\r\n      //值\r\n      if (filterType === 3){\r\n        getHistoryFilterForm.append(\"filterValue\", [filterValue[0].getTime(), filterValue[1].getTime()]);\r\n      }\r\n      else{\r\n        getHistoryFilterForm.append(\"filterValue\", filterValue);\r\n      }\r\n      // console.log(getHistoryFilterForm.get('filterType'), getHistoryFilterForm.get('filterValue'));\r\n      this.$axios.post(\"/NBI/History/getHistoryWithFilter/\", getHistoryFilterForm, {\r\n         headers: {'Content-Type': 'multipart/form-data'}\r\n      }).then((response) => {\r\n        if (response.data === 1){\r\n          this.$message({\r\n            showClose: true,\r\n            message: '登录状态错误！请重新登录。',\r\n            type: 'error'\r\n          });\r\n          this.$bus.$emit(\"changeStatus\",{status: false, uname:''});\r\n        }\r\n        else {\r\n          // console.log(response.data);\r\n          this.loadHistory(response.data.info,response.data.totalPage,response.data.totalImage);\r\n        }\r\n      });\r\n    },\r\n    //下载当前页面历史数据\r\n    downloadHistory(currentPage, pageCount){\r\n      let getHistoryForm = new FormData();\r\n      // 身份识别数据\r\n      getHistoryForm.append(\"uid\", this.getUID());\r\n      getHistoryForm.append(\"token\", this.getToken());\r\n      //当前页面\r\n      getHistoryForm.append(\"currentPage\", currentPage);\r\n      //显示条数\r\n      getHistoryForm.append(\"pageCount\", pageCount);\r\n      this.$axios.post(\"/NBI/History/display/\",getHistoryForm, {\r\n         headers: {'Content-Type': 'multipart/form-data'}\r\n      }).then((response) => {\r\n        if (response.data === 1){\r\n          this.$message({\r\n            showClose: true,\r\n            message: '登录状态错误！请重新登录。',\r\n            type: 'error'\r\n          });\r\n          this.$bus.$emit(\"changeStatus\",{status: false, uname:''});\r\n        }\r\n        else {\r\n          this.loadHistory(response.data.info,response.data.totalPage,response.data.totalImage)\r\n        }\r\n      })\r\n    },\r\n    //载入下载的历史数据\r\n    loadHistory(data,totalPage,totalImage){\r\n      // console.log(totalPage);\r\n      // for (var key in data) {\r\n      //   var item = data[key];\r\n      //   console.log(item);\r\n      // }\r\n      this.totalPage = totalPage;\r\n      this.totalImage = totalImage;\r\n      this.historyList.splice(0);\r\n      for (var key in data) {\r\n        var item = data[key];\r\n        // console.log(item.Image_Compress);\r\n        this.historyList.push({\r\n          Image_Compress: item.Image_Compress,\r\n          expireTime: item.expireTime,\r\n          index: item.index,\r\n          lastChangeTime: item.lastChangeTime,\r\n          part: item.part,\r\n          preDiagnosis: item.preDiagnosis,\r\n          sampleName: item.sampleName,\r\n          _id: item._id\r\n        })\r\n      }\r\n      // // console.log(this.historyList);\r\n\r\n      this.sendTotalPage();\r\n      this.sendTotalImage();\r\n\r\n      this.reset = true;//重建组件\r\n      // console.log(this.itemVisible+'后');\r\n    },\r\n    sendTotalPage() {\r\n      this.$bus.$emit('historyTotalPage',this.totalPage);\r\n    },\r\n    sendTotalImage() {\r\n      this.$bus.$emit('historyTotalImage',this.totalImage);\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  margin: 0;\r\n  padding: 0 0 5px 0;\r\n  background: #fff;\r\n}\r\n\r\nli {\r\n  list-style-type: none;\r\n}\r\n\r\n.table-container {\r\n  width: 1300px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.table-header {\r\n  background: #767ff6;\r\n  border-radius: 3px 3px 0 0;\r\n  margin-top: 5px;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  color: #fff;\r\n  padding: 12px 0;\r\n  border: #fff solid 7px;\r\n  box-shadow: 0px 0px 8px #fff inset;;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n}\r\n\r\n.table-header div {\r\n  display: inline-block;\r\n  text-align: center;\r\n}\r\n\r\n.table-header-index {\r\n  width: 0;\r\n  display: inline-block;\r\n  text-align: center;\r\n}\r\n\r\ntd {\r\n  text-align: left;\r\n  padding: 8px 31px;\r\n}\r\n\r\n.table-header-index-td {\r\n  padding: 8px 20px;\r\n}\r\n\r\n.load-container {\r\n  height: 429px;\r\n  margin: 0 0 5px 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}