{"ast":null,"code":"export default {\n  name: \"HistoryItem\",\n\n  data() {\n    return {\n      url: \"/static/Data/Temp/\" + this.Image_Compress,\n      srcList: [\"/static/Data/Temp/\" + this.Image_Compress]\n    };\n  },\n\n  props: {\n    index: {\n      type: String,\n      required: true\n    },\n    Image_Compress: {\n      type: String,\n      default: ''\n    },\n    sampleName: {\n      type: String,\n      default: '未命名样本'\n    },\n    part: {\n      type: String,\n      default: '未知'\n    },\n    preDiagnosis: {\n      type: String,\n      default: '未知'\n    },\n    lastChangeTime: {\n      type: String,\n      required: true\n    },\n    expireTime: {\n      type: String,\n      required: true\n    },\n    _id: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    lastChangeTimeShow() {\n      let date = new Date(parseInt(this.lastChangeTime) * 1000);\n      let Year = date.getFullYear();\n      let Month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n      let Day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n      let Hour = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n      let Minute = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n      let Second = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n      let GMT = Year + '-' + Month + '-' + Day + ' ' + Hour + ':' + Minute + ':' + Second; //YEAR-MM-DD HH:mm:ss\n\n      return GMT;\n    },\n\n    expireTimeShow() {\n      let dateBegin = new Date(parseInt(Date.now()));\n      let dateEnd = new Date(parseInt(this.expireTime) * 1000); // console.log(Date.now());\n      // console.log(dateBegin);\n      // console.log(this.expireTime);\n      // console.log(dateEnd);\n      //天\n\n      let dateDiff = dateEnd.getTime() - dateBegin.getTime(); //时间差的毫秒数\n\n      let dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000)); //计算出相差天数\n      //小时\n\n      let leave1 = dateDiff % (24 * 3600 * 1000); //计算天数后剩余的毫秒数\n\n      let hours = Math.floor(leave1 / (3600 * 1000)); //计算出小时数\n      //分钟\n\n      let leave2 = leave1 % (3600 * 1000); //计算小时数后剩余的毫秒数\n\n      let minutes = Math.floor(leave2 / (60 * 1000)); //计算相差分钟数\n      //秒\n\n      let leave3 = leave2 % (60 * 1000); //计算分钟数后剩余的毫秒数\n\n      let seconds = Math.round(leave3 / 1000);\n      let ret = ''; // console.log(\"距离过期还有\"+dayDiff+\"天\"+hours+\"小时\"+minutes+\"分钟\"+seconds+\"秒\");\n\n      if (dayDiff > 0) {\n        ret = dayDiff + '天';\n      } else if (hours > 0) {\n        ret = hours + '小时';\n      } else if (minutes > 0) {\n        ret = minutes + '分钟';\n      } else if (seconds > 0) {\n        ret = seconds + '秒';\n      } else {\n        ret = '过期' + (dayDiff * -1 - 1) + '天';\n      }\n\n      return ret;\n    },\n\n    //信息填写完整，才可以“保存结果”\n    //永久显示绿色，暂时显示橙色，马上要删除显示红色\n    expireBackground() {\n      let str = this.expireTimeShow;\n      let regOrange = RegExp('天');\n      let regGray = RegExp('过');\n\n      if (regGray.test(str)) {\n        return {\n          background: '#808080'\n        };\n      } else if (regOrange.test(str)) {\n        return {\n          background: '#ff9854'\n        };\n      } else {\n        return {\n          background: '#7ae588'\n        };\n      }\n    }\n\n  },\n  methods: {\n    // cookie\n    getCookie(objName) {\n      //获取指定名称的cookie的值\n      const arrStr = document.cookie.split(\"; \");\n\n      for (let i = 0; i < arrStr.length; i++) {\n        const temp = arrStr[i].split(\"=\");\n        if (temp[0] === objName) return temp[1];\n      }\n\n      return null;\n    },\n\n    getToken() {\n      return this.getCookie(\"NBI_token\");\n    },\n\n    getUID() {\n      return this.getCookie(\"NBI_UID\");\n    },\n\n    //传入GID\n    checkDetail(GID) {\n      this.$router.push({\n        name: 'HistoryItemDetailPage',\n        params: {\n          GID: GID\n        }\n      });\n    },\n\n    deleteDetail(GID) {\n      this.$confirm('确认删除？（操作不可逆）').then(() => {\n        let deleteImageForm = new FormData(); // 身份识别数据\n\n        deleteImageForm.append(\"uid\", this.getUID());\n        deleteImageForm.append(\"token\", this.getToken()); //当前页面\n\n        deleteImageForm.append(\"gid\", GID);\n        this.$axios.post(\"/NBI/History/deleteImage/\", deleteImageForm, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(response => {\n          if (response.data === 1) {\n            this.$message({\n              showClose: true,\n              message: '登录状态错误！请重新登录。',\n              type: 'error'\n            });\n          } else if (response.data === 3) {\n            this.$message({\n              showClose: true,\n              message: '删除失败，处理错误！',\n              type: 'error'\n            });\n          } else {\n            this.$message({\n              showClose: true,\n              message: '图片已删除',\n              type: 'success'\n            });\n            this.$bus.$emit(\"updateHistoryPage\");\n          }\n        });\n      }).catch(() => {});\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA;EACAA,mBADA;;EAEAC;IACA;MACAC,+CADA;MAEAC,UACA,0CADA;IAFA;EAMA,CATA;;EAUAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAG;IAFA,CALA;IASAC;MACAJ,YADA;MAEAG;IAFA,CATA;IAaAE;MACAL,YADA;MAEAG;IAFA,CAbA;IAiBAG;MACAN,YADA;MAEAG;IAFA,CAjBA;IAqBAI;MACAP,YADA;MAEAC;IAFA,CArBA;IAyBAO;MACAR,YADA;MAEAC;IAFA,CAzBA;IA6BAQ;MACAT,YADA;MAEAC;IAFA;EA7BA,CAVA;EA4CAS;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,oFARA,CAUA;;MACA;IACA,CAbA;;IAcAC;MACA;MACA,yDAFA,CAGA;MACA;MACA;MACA;MAEA;;MACA,uDATA,CASA;;MACA,wDAVA,CAUA;MACA;;MACA,2CAZA,CAYA;;MACA,+CAbA,CAaA;MACA;;MACA,oCAfA,CAeA;;MACA,+CAhBA,CAgBA;MACA;;MACA,kCAlBA,CAkBA;;MACA;MAEA,aArBA,CAsBA;;MACA;QACAC;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;;MACA;IACA,CAjDA;;IAkDA;IACA;IACAC;MACA;MACA;MACA;;MACA;QACA;UAAAC;QAAA;MACA,CAFA,MAEA;QACA;UAAAA;QAAA;MACA,CAFA,MAEA;QACA;UAAAA;QAAA;MACA;IACA;;EA/DA,CA5CA;EA6GAC;IACA;IACAC;MAAA;MACA;;MACA;QACA;QACA;MACA;;MACA;IACA,CATA;;IAUAC;MACA;IACA,CAZA;;IAaAC;MACA;IACA,CAfA;;IAgBA;IACAC;MACA;QACA1B,6BADA;QAEA2B;UACAC;QADA;MAFA;IAMA,CAxBA;;IAyBAC;MACA,8BACAC,IADA,CACA;QACA,qCADA,CAEA;;QACAC;QACAA,iDAJA,CAKA;;QACAA;QACA;UACAC;YAAA;UAAA;QADA,GAEAF,IAFA,CAEAG;UACA;YACA;cACAC,eADA;cAEAC,wBAFA;cAGA7B;YAHA;UAKA,CANA,MAOA;YACA;cACA4B,eADA;cAEAC,qBAFA;cAGA7B;YAHA;UAKA,CANA,MAOA;YACA;cACA4B,eADA;cAEAC,gBAFA;cAGA7B;YAHA;YAKA;UACA;QACA,CAzBA;MA0BA,CAlCA,EAmCA8B,KAnCA,CAmCA,OACA,CApCA;IAqCA;;EA/DA;AA7GA","names":["name","data","url","srcList","props","index","type","required","Image_Compress","default","sampleName","part","preDiagnosis","lastChangeTime","expireTime","_id","computed","lastChangeTimeShow","expireTimeShow","ret","expireBackground","background","methods","getCookie","getToken","getUID","checkDetail","params","GID","deleteDetail","then","deleteImageForm","headers","response","showClose","message","catch"],"sourceRoot":"src/components/history","sources":["HistoryItem.vue"],"sourcesContent":["<template>\r\n  <div class=\"historyItemContainer\">\r\n    <span class=\"historyItemInner\" style=\"width: 4%\">\r\n      <div id=\"history-index-inner\">{{ index }}</div>\r\n    </span>\r\n    <span class=\"historyItemInner\" style=\"width: 11%\">\r\n      <div style=\"width: 85%;background-color: #d3d3d3;height: 90%;display: flex;justify-content: center;align-items: center;border: 1px solid #b7b7b7\">\r\n        <p v-show=\"this.Image_Compress==='None'\" style=\"color: darkred\">未生成NBI图片</p>\r\n        <el-image v-show=\"this.Image_Compress!=='None'\" class=\"historyPageImageSmall\" :src=\"url\" :preview-src-list=\"srcList\"></el-image>\r\n      </div>\r\n    </span>\r\n    <span class=\"historyItemInner\" style=\"width: 15%; font-weight: bold;\">{{ sampleName }}</span>\r\n    <span class=\"historyItemInner\" style=\"width: 10%\">{{ part }}</span>\r\n    <span class=\"historyItemInner\" style=\"width: 15%\">{{ preDiagnosis }}</span>\r\n    <span class=\"historyItemInner\" style=\"width: 15%\">{{ lastChangeTimeShow }}</span>\r\n    <span class=\"historyItemInner\" style=\"width: 10%\">\r\n      <div id=\"expired-time\" :style=\"expireBackground\">{{ expireTimeShow }}</div>\r\n    </span>\r\n    <span class=\"historyItemInner\" style=\"width: 15%\">\r\n      <el-button type=\"primary\" plain @click=\"checkDetail(_id)\">查看详情</el-button>\r\n      <i class=\"el-icon-delete oneImageDeleteBtn\" @click=\"deleteDetail(_id)\"></i>\r\n    </span>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"HistoryItem\",\r\n  data() {\r\n    return {\r\n      url: \"/static/Data/Temp/\"+this.Image_Compress,\r\n      srcList: [\r\n        \"/static/Data/Temp/\"+this.Image_Compress\r\n      ],\r\n    };\r\n  },\r\n  props:{\r\n    index:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    Image_Compress:{\r\n      type:String,\r\n      default:''\r\n    },\r\n    sampleName:{\r\n      type:String,\r\n      default:'未命名样本'\r\n    },\r\n    part:{\r\n      type:String,\r\n      default:'未知'\r\n    },\r\n    preDiagnosis:{\r\n      type:String,\r\n      default:'未知'\r\n    },\r\n    lastChangeTime:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    expireTime:{\r\n      type:String,\r\n      required:true\r\n    },\r\n    _id:{\r\n      type:String,\r\n      required:true\r\n    }\r\n  },\r\n  computed: {\r\n    lastChangeTimeShow() {\r\n      let date = new Date(parseInt(this.lastChangeTime) * 1000);\r\n      let Year = date.getFullYear();\r\n      let Month = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1);\r\n      let Day = (date.getDate() < 10 ? '0' + date.getDate() : date.getDate());\r\n      let Hour = (date.getHours() < 10 ? '0' + date.getHours() : date.getHours());\r\n      let Minute = (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes());\r\n      let Second = (date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds());\r\n      let GMT =  Year + '-' + Month + '-' + Day + ' '+ Hour +':'+ Minute  + ':' + Second;\r\n\r\n      //YEAR-MM-DD HH:mm:ss\r\n      return GMT;\r\n    },\r\n    expireTimeShow() {\r\n      let dateBegin = new Date(parseInt(Date.now()));\r\n      let dateEnd = new Date(parseInt(this.expireTime) * 1000);\r\n      // console.log(Date.now());\r\n      // console.log(dateBegin);\r\n      // console.log(this.expireTime);\r\n      // console.log(dateEnd);\r\n      \r\n      //天\r\n      let dateDiff = dateEnd.getTime() - dateBegin.getTime(); //时间差的毫秒数\r\n      let dayDiff = Math.floor(dateDiff / (24 * 3600 * 1000)); //计算出相差天数\r\n      //小时\r\n      let leave1=dateDiff%(24*3600*1000); //计算天数后剩余的毫秒数\r\n      let hours=Math.floor(leave1/(3600*1000)); //计算出小时数\r\n      //分钟\r\n      let leave2=leave1%(3600*1000); //计算小时数后剩余的毫秒数\r\n      let minutes=Math.floor(leave2/(60*1000)); //计算相差分钟数\r\n      //秒\r\n      let leave3=leave2%(60*1000); //计算分钟数后剩余的毫秒数\r\n      let seconds=Math.round(leave3/1000);\r\n\r\n      let ret = '';\r\n      // console.log(\"距离过期还有\"+dayDiff+\"天\"+hours+\"小时\"+minutes+\"分钟\"+seconds+\"秒\");\r\n      if (dayDiff > 0) {\r\n        ret = dayDiff+'天';\r\n      }else if (hours > 0) {\r\n        ret = hours+'小时';\r\n      }else if (minutes > 0) {\r\n        ret = minutes+'分钟';\r\n      }else if (seconds > 0) {\r\n        ret = seconds+'秒';\r\n      }else {\r\n        ret = '过期'+(dayDiff*(-1)-1)+'天';\r\n      }\r\n      return ret;\r\n    },\r\n    //信息填写完整，才可以“保存结果”\r\n    //永久显示绿色，暂时显示橙色，马上要删除显示红色\r\n    expireBackground() {\r\n      let str = this.expireTimeShow;\r\n      let regOrange = RegExp('天');\r\n      let regGray = RegExp('过');\r\n      if (regGray.test(str)) {\r\n        return { background: '#808080' };\r\n      }else if (regOrange.test(str)) {\r\n        return { background: '#ff9854' };\r\n      }else {\r\n        return { background: '#7ae588' };\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n     // cookie\r\n    getCookie(objName){//获取指定名称的cookie的值\r\n      const arrStr = document.cookie.split(\"; \");\r\n      for(let i = 0; i < arrStr.length; i ++){\r\n        const temp = arrStr[i].split(\"=\");\r\n        if(temp[0] === objName) return temp[1];\r\n      }\r\n      return null;\r\n    },\r\n    getToken(){\r\n      return this.getCookie(\"NBI_token\");\r\n    },\r\n    getUID(){\r\n      return this.getCookie(\"NBI_UID\");\r\n    },\r\n    //传入GID\r\n    checkDetail(GID) {\r\n      this.$router.push({\r\n        name: 'HistoryItemDetailPage',\r\n        params: {\r\n          GID: GID\r\n        }\r\n      })\r\n    },\r\n    deleteDetail(GID) {\r\n      this.$confirm('确认删除？（操作不可逆）')\r\n      .then(() => {\r\n        let deleteImageForm = new FormData();\r\n        // 身份识别数据\r\n        deleteImageForm.append(\"uid\", this.getUID());\r\n        deleteImageForm.append(\"token\", this.getToken());\r\n        //当前页面\r\n        deleteImageForm.append(\"gid\", GID);\r\n        this.$axios.post(\"/NBI/History/deleteImage/\", deleteImageForm, {\r\n         headers: {'Content-Type': 'multipart/form-data'}\r\n        }).then((response) => {\r\n          if (response.data === 1){\r\n            this.$message({\r\n              showClose: true,\r\n              message: '登录状态错误！请重新登录。',\r\n              type: 'error'\r\n            });\r\n          }\r\n          else if (response.data === 3){\r\n            this.$message({\r\n              showClose: true,\r\n              message: '删除失败，处理错误！',\r\n              type: 'error'\r\n            });\r\n          }\r\n          else{\r\n            this.$message({\r\n              showClose: true,\r\n              message: '图片已删除',\r\n              type: 'success'\r\n            });\r\n            this.$bus.$emit(\"updateHistoryPage\");\r\n          }\r\n        });\r\n      })\r\n      .catch(() => {\r\n      });\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\ntable {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n#history-index-inner {\r\n  font-size: 16px;\r\n  /* padding-left: 7px; */\r\n  width: 40px;\r\n  height: 40px;\r\n  background: #3ae6cc;\r\n  color: ghostwhite;\r\n  font-weight: bold;\r\n  border-radius: 8%;\r\n  margin: 0 auto;\r\n  display:flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.warning-row {\r\n  background: oldlace;\r\n}\r\n\r\n.success-row {\r\n  background: #f0f9eb;\r\n}\r\n\r\n#expired-time {\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  width: 56px;\r\n  padding: 6px 12px;\r\n  border-radius: 10px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.historyItemContainer{\r\n  height: 85px;\r\n  border-bottom: .5px rgb(224, 224, 224) solid;\r\n  background: #fefeff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  margin: 0 7px;\r\n}\r\n\r\n.historyItemInner{\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  /* font-family: 幼圆,STHeiti,serif; */\r\n  text-align: center;\r\n  font-size: 14px;\r\n  color: #9195a3;\r\n}\r\n\r\n.historyPageImageSmall{\r\n  height: 100%;\r\n  object-fit: contain;\r\n}\r\n\r\n.oneImageDeleteBtn{\r\n  margin-left: 7px;\r\n  cursor: pointer;\r\n  transition: 0.3s ease;\r\n}\r\n\r\n.oneImageDeleteBtn:hover{\r\n  background-color: white;\r\n  color: red;\r\n}\r\n\r\n.el-button {\r\n  padding: 8px 20px;\r\n}\r\n\r\n.el-button--primary.is-plain {\r\n    color: #3ae6cc;\r\n    background: #effffd;\r\n    border-color: #3ae6cc;\r\n}\r\n\r\n.el-button--primary {\r\n    color: #3ae6cc;\r\n    background-color: #effffd;\r\n    border-color: #3ae6cc;\r\n}\r\n\r\n.el-button--primary.is-plain:focus, .el-button--primary.is-plain:hover {\r\n    background: #3ae6cc;\r\n    border-color: #3ae6cc;\r\n    color: #fff;\r\n}\r\n\r\n.el-button.is-plain:focus, .el-button.is-plain:hover {\r\n    background: #3ae6cc;\r\n    border-color: #3ae6cc;\r\n    color: #fff;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}